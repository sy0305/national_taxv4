<?xml version="1.0" encoding="UTF-8"?>
<beans  
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 配置包扫描 -->
	
	<!-- 自动扫描的包名 -->
	<context:component-scan base-package="com.camel.controller.*"/>
	<!-- 配置springmvc特有的驱动 -->
	
	<!-- 开启注解映射的支持 -->
	<mvc:annotation-driven/>
	<!-- 配置视图解析器 -->
	
	<!-- 默认访问跳转到登录页面(即定义无需Controller的url<->view直接映射) -->
<!-- 	<mvc:view-controller path="/" view-name="forward:/login.jsp"/> -->
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
			<!-- 配置前缀 -->
		<property name="prefix" value="/WEB-INF/jsp"/>
			<!-- 配置后缀 -->
		<property name="suffix" value=".jsp"></property>
	</bean>
<!-- 由于web.xml中设置是：由SpringMVC拦截所有请求,于是在读取静态资源文件的时候就会受到影响(说白了就是读不到) -->
	<!-- 经过下面的配置，该标签的作用就是：所有页面中引用"/js/**"的资源，都会从"/resources/js/"里面进行查找 -->
	<!-- 我们可以访问http://IP:8080/xxx/js/my.css和http://IP:8080/xxx/resources/js/my.css对比出来 -->

	<mvc:resources mapping="/css/**" location="/css/"/>
	<mvc:resources mapping="/images/**" location="/images/"/>
	<mvc:resources mapping="/js/**" location="/js/"/>
	<!-- 配置json注解 -->
	<bean id="annotationMethodHandlerAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	<property name="messageConverters">
		<list>
	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
		<list>	
		<value>text/html;charset=utf-8</value>	
		</list>	
		</property>
		</bean>
		 <bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		 <property name="supportedMediaTypes">
		 <list>
	<value>text/plain;charset=utf-8</value>
	<value>application/json;charset=utf-8</value>
	     </list> 
		 </property>	 
		 </bean>
	   </list>
	</property>
	</bean>
	
	<!-- 数据校验 -->
	<!-- 任务调度 -->
	
	
	<!-- 允许对静态资源文件的访问 -->
 	<mvc:default-servlet-handler/>
	<!--配置静态资源映射,防止静态资源被拦截  -->
	<!-- <mvc:interceptors>
		<mvc:interceptor>
			拦截哪些请求，因为以后的菜单很多，所以要使用一些通配符
			<mvc:mapping path="/**"/>
			排除哪些请求不要拦截,只要是登录的CONTROLLER都不拦截
			<mvc:exclude-mapping path="/login/**"/>
			<mvc:exclude-mapping path="/login/validate"/>
			<mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/images/**"/>
			<mvc:exclude-mapping path="/api/**"/>
			<bean class="com.xianzhi.controller.interceptor.SessionInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
	<!-- 加载properties包下所有文件 -->
		<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesMode" value="2"></property>
		<property name="locations">
			<list>
				<value>classpath:properties/*.properties
				</value>
			</list>
		</property>
	</bean>
	<!-- 配置文件上传解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
         <!-- 指定所上传文件的总大小不能超过20M。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --> 
         <property name="maxUploadSize" value="20000000"/>
         <property name="defaultEncoding" value="utf-8"></property>
    </bean>
	  

	
	
</beans>